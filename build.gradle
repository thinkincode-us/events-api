plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.21"
}

apply plugin:"application"
apply plugin:"java"

group "us.thinkincode"

sourceCompatibility = 11.0
targetCompatibility = 11.0

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0'
    }
}

dependencies {
    annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-security"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation ("org.slf4j:slf4j-api:1.7.26") {
        force = true
    }
    implementation ("commons-logging:commons-logging:1.2") {
        force = true
    }
    implementation 'com.itextpdf:itext7-core:7.1.5'
    implementation  "io.micronaut:micronaut-security-jwt"
    implementation "org.springframework.security:spring-security-crypto:4.2.5.RELEASE"

    compileOnly "io.micronaut:micronaut-inject-java"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    compile "io.swagger.core.v3:swagger-annotations"

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testCompile "io.micronaut:micronaut-spring"
    testCompile "io.micronaut.configuration:micronaut-jdbc-dbcp"
    testCompile 'org.springframework:spring-jdbc:4.3.17.RELEASE'
    testImplementation("org.spockframework:spock-core:1.3-groovy-2.5") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
}

shadowJar {
    archivesBaseName = "events-api"
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "us.thinkincode.events.Application"
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

def imgVersion = "0.1"

task createDockerImage(type: Exec) {
    commandLine "docker", "build",
            "-t", "events-api:${imgVersion}",
            "."
}

task runDocker(type: Exec) {
    commandLine "docker", "run",
            "--rm",
            "--name", "events-api",
            "events-api:${imgVersion}"
}